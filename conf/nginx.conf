
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    lua_shared_dict share_transfer_space 10m;

    server {
        listen       80;
        charset utf-8;

        #access_log  logs/host.access.log  main;

        location / {
            content_by_lua_block {
            	local cjson = require("cjson")
            	local Server = require("smart-restaurant/server")
            	local Backend = require("smart-restaurant/backend")
            	local Frontend = require("smart-restaurant/frontend")
            	local Terminal = require("smart-restaurant/terminal")
            	local Runner = require("smart-restaurant/runner")
            	local Control = require("smart-restaurant/control")

            	local runner = Runner:new()
            	runner:run(20) -- 运行20个盘空间的transfer

            	ngx.log(ngx.INFO, "runner after ---- -----")

            	local server = Server:new()
            	local backend = Backend:new()
            	local frontend = Frontend:new()
            	-- 注册
            	server:register("backend", backend)
            	server:register("frontend", frontend)

            	backend:register("server", server)
            	local terminal1 = Terminal:new()
            	terminal1:set_watch_index(2)
            	backend:register("terminal", terminal1)
            	local control = Control:new()
            	control:set_watch_index(2)
            	backend:register("control", control)


            	frontend:register("server", server)

            	-- 消费者下单
            	local ingres = {"小白菜", "黄花菜", "鱼豆腐", "牛肉", "羊肉"}
            	-- 模拟服务端接收ingres
            	server:recv(ingres)
            	ngx.say(cjson.encode(server.ingredients.inventory))
            	-- 模拟备菜端，完成备菜
                backend:watch(1, "小白菜")
                
            	-- 模拟消费者，已取菜
            	frontend:complete("小白菜")

            	ngx.say(cjson.encode(server.ingredients.inventory))
            }
        }

        error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

    }


}
