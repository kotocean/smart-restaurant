
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

	lua_code_cache off; # 生产开启
    lua_shared_dict share_transfer_space 10m;

    server {
        listen       8080;
        charset utf-8;

        location / {
            content_by_lua_block {
            	local cjson = require("cjson")
            	local runner = require("smart-restaurant/runner")

				local uri = ngx.var.uri
				local args, err = ngx.req.get_uri_args()
				if(uri=="/") then
            		runner:run(20) -- 运行20个盘空间的transfer
				else
					if(uri=="/set") then
						runner:set(args['i'],args['v'])
					end
					if(uri=="/get") then
						local value = runner:get(args['i'])
						if type(value) == "table" then
							ngx.say(cjson(value))
						else
							ngx.say(value)
						end
					end
					ngx.say(uri,",args:", cjson.encode(args))
				end
                ngx.say("transfer_space:", ngx.shared.share_transfer_space:get("share_transfer_space"))
            }
        }
    }

	# server {
	# 	listen       8081;
    #     charset utf-8;

    #     location / {
    #         content_by_lua_block {
    #         	local cjson = require("cjson")
    #         	local Server = require("smart-restaurant/server")

    #         	local server = Server:new()
    #         	-- 注册
    #         	server:register("backend", backend)
    #         	server:register("frontend", frontend)

    #         	-- 消费者下单
    #         	local ingres = {"小白菜", "黄花菜", "鱼豆腐", "牛肉", "羊肉"}
    #         	-- 模拟服务端接收ingres
    #         	server:recv(ingres)
    #         	ngx.say(cjson.encode(server.ingredients.inventory))

    #         }
    #     }
	# }

	# server {
	# 	listen       8082;
    #     charset utf-8;

    #     location / {
    #         content_by_lua_block {
    #         	local cjson = require("cjson")
    #         	local Backend = require("smart-restaurant/backend")
    #         	local Terminal = require("smart-restaurant/terminal")
    #         	local Control = require("smart-restaurant/control")

    #         	local backend = Backend:new()

    #         	backend:register("server", server)
    #         	local terminal1 = Terminal:new()
    #         	terminal1:set_watch_index(2)
    #         	backend:register("terminal", terminal1)
    #         	local control1 = Control:new()
    #         	control1:set_watch_index(2)
    #         	backend:register("control", control1)

    #         	-- 模拟备菜端，备菜
    #             backend:watch()

    #         }
    #     }
	# }

	# server {
	# 	listen       8083;
    #     charset utf-8;

    #     location / {
    #         content_by_lua_block {
    #         	local cjson = require("cjson")
    #         	local Frontend = require("smart-restaurant/frontend")
    #         	local Terminal = require("smart-restaurant/terminal")
    #         	local Control = require("smart-restaurant/control")

    #         	local frontend = Frontend:new()


    #         	frontend:register("server", server)
	# 			local terminal2 = Terminal:new()
    #         	terminal2:set_watch_index(8)
    #         	frontend:register("terminal", terminal2)
    #         	local control2 = Control:new()
    #         	control2:set_watch_index(8)
    #         	frontend:register("control", control2)
                
    #         	-- 模拟消费者，取菜
    #         	frontend:watch()

    #         }
    #     }
	# }

}
